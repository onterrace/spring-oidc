# Embeded Tomcat Configuration 
server:
  port: 80
  # port: 443
  ssl:
    # SSL 사용하지 않음. ngrok를 사용함 
    enabled: false
    key-alias: tomcat 
    key-store: classpath:ssl/keystore.jks
    key-store-password: 123456
  tomcat:
    #basedir: /
    threads:
      max: 200    
  servlet:
    # 모든 Servlet Container 에는 default Servlet 이라는게 등록되어 있다.
    # 실제로 tomcat 을 설치한 다음 conf 디렉토리 하위의 web.xml 을 열어보면 default Servlet 이 등록되어 있는것을 확인할 수 있다.
    register-default-servlet: true
  error:
    include-exception: true  # 오류 응답에 exception 정보를 포함할지 여부 
    include-message: always   # Response 에 Exception Message 를 표시할지 (never | always | on_param)
    include-stacktrace: always # 오류 응답에 stacktrace 정보를 포함할지 여부, ALWAYS, NEVER, ON_ERROR_ONLY
    #path: '/error'  # endpoint가 없는 경우 이 패스로 요청이 간다. 디폴트가 /error 이므로 설정할 필요는 없다. 
    whitelabel:
      # spring boot provides a standard error web page 
      enabled: false 
    #  server.error.path를 customize할 수 있다. 


spring:
  mustache:
    prefix: classpath:/templates/
    # default suffix is .mustache
    suffix: .html

  # freemarker:
  #   suffix: .ftl
  #   template-loader-path: classpath:/templates
  mvc:
    view:
      prefix: /WEB-INF/views/
      suffix: .jsp
    static-path-pattern: /res/**   
  # web:
  #   resources:
  #     static-locations: 
  #       - classpath:/static/ 
  #       - classpath:/public/ 
      #add-mappings: false



---
spring:
  profiles:
    # 환경변수에 spring.profiles.active 가 설정되어 있지 않으면
    # 아래에 설정된 프로파일이 디폴트가 된다.
    active: local
    group:
      local: oauth
      dev: jdbc

---
spring:
  config:
    activate:
      on-profile: oauth
    import:
      - classpath:/oauth-config.yml


---
spring:
  config:
    activate:
      on-profile: jdbc
    # import:
      # - classpath:/oauth-config.yml
